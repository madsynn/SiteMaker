


ssh root@104.130.169.19
FrQHeEMsR4ur
cd ../var/www/vhosts/gracecompany/

alias productcontroller='subl /var/www/vhosts/gracecompany/stage.grace/app/Http/Controllers/ProductController.php'
alias shop='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend/shop/'
alias openshop='subl /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend/shop/index.blade.php'
alias product='subl /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend/shop/product.blade.php'
alias res='cd /var/www/vhosts/gracecompany/stage.grace/resources/'
alias resb='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/backend'
alias resf='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend'

alias productcontroller='subl /var/www/vhosts/gracecompany/stage.grace/app/Http/Controllers/ProductController.php'
alias openshop='subl /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend/shop/index.blade.php'
alias shop='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend/shop/'
alias ecom='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/backend/ecom/'
alias grace='cd /var/www/vhosts/gracecompany/stage.grace/'
alias db='cd /var/www/vhosts/gracecompany/stage.grace/database/'
alias logs='cd /var/www/vhosts/gracecompany/stage.grace/storege/logs/'
alias psections='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/backend/ecom/products/create-sections'
alias product='subl /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend/shop/product.blade.php'
alias res='cd /var/www/vhosts/gracecompany/stage.grace/resources/'
alias resb='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/backend'
alias resf='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend'
alias openshoptop='subl /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend/shop/partials/layout/shoptop.blade.php'
alias restarta='service httpd restart && service httpd reload'
alias restartall='service httpd restart && service httpd reload && service varnish restart && service varnish reload'
alias restartv='service varnish restart && service varnish reload'
alias restartl='service lsyncd restart'

alias blay='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/backend/layout'
alias flay='cd /var/www/vhosts/gracecompany/stage.grace/resources/views/frontend/layout'

E:\A_LOCAL\bbb\part1\resources\views\admin\layout

"filp/whoops": "^2.1"

gzip -c qniquequilter.com-error.log > qniquequilter.com-error.log.gz

tar -zcvf date +"%m_%d_%Y".tar.gz /var/www/vhosts/fungamesandtoys.com/wp-content/themes/knucklestrutz

git archive --format=tar -o ~/buildingsets.toys-dec-15-2015.tar -v HEAD

tar
--exclude='*.jpg'
--exclude='*.png'
--exclude='*.mp3'
--exclude='*.mov'
--exclude='*.wmv'
--exclude='*.avi'
--exclude='*.mp4'
--exclude='*.pdf'
-czf site.com.20130924.tgz /var/httpd/site.com

tar --exclude-vcs --exclude=*.mov --exclude=*.wmv --exclude=*.avi --exclude=.git/* --exclude=.phils/* --exclude=.idea/* --exclude=*.mp4 -zcvf stage-grace-oct-5-2016.tar.gz /var/www/vhosts/gracecompany/stage.grace && mv /var/www/vhosts/gracecompany/stage-grace-oct-5-2016.tar.gz /var/www/vhosts/.down && chmod 777 /var/www/vhosts/.down && chmod 777 /var/www/vhosts/.down/stage-grace-oct-5-2016.tar.gz


tar
--exclude-vcs
--exclude=*.mov
--exclude=*.wmv
--exclude=*.avi
--exclude=.git/*
--exclude=.phils/*
--exclude=.idea/*
--exclude=*.mp4
 -zcvf
live-grace-oct-5-2016.tar.gz
/var/www/vhosts/gracecompany/stage.grace
&& mv /var/www/vhosts/gracecompany/live-grace-oct-5-2016.tar.gz /var/www/vhosts/.down
&& chmod 777 /var/www/vhosts/.down
&& chmod 777 /var/www/vhosts/.down/live-grace-oct-5-2016.tar.gz


\Illuminate\Database\Eloquent\Relations\BelongsToMany
 \Illuminate\Database\Eloquent\Relations\MorphTo


tar --exclude-vcs --exclude=*.mov --exclude=*.wmv --exclude=*.avi --exclude=.git/* --exclude=*.rar --exclude=*.zip --exclude=*.psd --exclude=*.tiff --exclude=.phils/* --exclude=.idea/* --exclude=*.mp4 -zcvf live-grace-oct-5-2016.tar.gz /var/www/vhosts/gracecompany/live.grace && mv ./live-grace-oct-5-2016.tar.gz /var/www/vhosts/.down &&  chmod 777 /var/www/vhosts/.down -R


zipandmove

<div class="divider divider-center"><a href="#" data-scrollto="#header"><i class="icon-chevron-up"></i></a></div>

tabs tabs-bordered clearfix ui-tabs ui-widget ui-widget-content ui-corner-all



find . -type f | grep -v -E "(.idea|.git)" | while read file
do
  # Do something with $file
done






apidoc -i example/ -o doc/

Auto javaDocify Plugin for CFML
===============================
Running..
Adding comments to cftags
Adding comments to cfscript
Done!

{ "keys": ["super+ctrl+alt+space"], "command": "simple_phpspec" }


view.sel()[0].begin()).rpartition('.')[2].strip()

        "",
        "",
        "",
        ""




<div class="divider"><i class="icon-circle"></i></div>
<div class="divider divider-right"><i class="icon-heart"></i></div>
<div class="divider divider-center"><i class="icon-cloud"></i></div>
<div class="divider divider-short"><i class="icon-screen"></i></div>
<div class="divider divider-short divider-right"><i class="icon-pill"></i></div>
<div class="divider divider-short divider-center"><i class="icon-crop"></i></div>
<div class="divider divider-rounded"><i class="icon-connection-empty"></i></div>
<div class="divider divider-rounded divider-right"><i class="icon-chat"></i></div>
<div class="divider divider-rounded divider-center"><i class="icon-map-marker"></i></div>
<div class="divider divider-short divider-rounded"><i class="icon-barbell"></i></div>
<div class="divider divider-short divider-rounded divider-right"><i class="icon-atom"></i></div>
<div class="divider divider-short divider-rounded divider-center"><i class="icon-pencil"></i></div>
<div class="divider divider-border"><i class="icon-refresh"></i></div>
<div class="divider divider-border divider-right"><i class="icon-paperclip"></i></div>
<div class="divider divider-border divider-center"><i class="icon-email2"></i></div>

<div class="divider divider-short divider-border"><i class="icon-stack"></i></div>
<div class="divider divider-short divider-border divider-right"><i class="icon-diamond"></i></div>
<div class="divider divider-short divider-border divider-center"><i class="icon-like"></i></div>






In PHP, some of the magic methods have their values prefilled:
__construct, __destruct, __set, __unset, __wakeup have no @return tag.
__sleep returns an array.
__toString returns a string.
__isset returns a bool.
In ES6 Javascript, generator functions get a @yield tag instead of @return


--exclude-vcs

tar -czvf archive.tar.gz /home/ubuntu --exclude=*.mp4


tar -czvf archive.tar.gz /home/ubuntu --exclude=/home/ubuntu/Downloads --exclude=/home/ubuntu/.cache



tar
--exclude-vcs
--exclude=*.mov
--exclude=*.wmv
--exclude=*.avi
--exclude=.git/*
--exclude=.phils/*
--exclude=.idea/*
--exclude=*.mp4
 -zcvf
dev-build-oct-5-2016.tar.gz
/var/www/vhosts/gracecompany/dev-build
&& mv /var/www/vhosts/gracecompany/dev-build-oct-5-2016.tar.gz /var/www/vhosts/.down
&& chmod 777 /var/www/vhosts/.down
&& chmod 777 /var/www/vhosts/.down/dev-build-oct-5-2016.tar.gzip

<!DOCTYPE html>
<html lang="en">
<head>

    @include('layouts.meta')

    @yield('title')

    @include('layouts.css')

    @yield('css')

    @include('layouts.shim')

</head>

<body role="document">


    @include('layouts.nav')

    <div class="container theme-showcase" role="main">

    @yield('content')

    @include('layouts.bottom')

    </div> <!-- /container -->

    @include('layouts.scripts')

    @yield('scripts')

    @include('flash')

</body>
</html>



UA-77046605-2

 public function add() {

        $file = Request::file('file');
        $extension = $file->getClientOriginalExtension();
        Storage::disk('local')->put($file->getFilename().'.'.$extension,  File::get($file));

        $entry = new \App\File();
        $entry->mime = $file->getClientMimeType();
        $entry->original_filename = $file->getClientOriginalName();
        $entry->filename = $file->getFilename().'.'.$extension;

        $entry->save();

        $product  = new \App\Product();
        $product->file_id=$entry->id;
        $product->name =Request::input('name');
        $product->description =Request::input('description');
        $product->price =Request::input('price');
        $product->imageurl =Request::input('imageurl');

        $product->save();

        return redirect('/admin/products');

    }


"cartalyst/cart": "2.0.*@dev"
composer create-project --prefer-dist laravel/laravel ./ "5.1.*"


Auth::getUser() or Sentinel::getUser().

$full_path1 = $full_size_dir        . $sessionImage->filename;


@include('frontend/layout/parts/default-styles')
@include('frontend/layout/parts/default-scripts')


@include('backend.layout.parts.default-styles')
@include('backend.layout.parts.default-scripts')
@include('backend.layout.parts.additional-scripts')



   <script>
          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
          })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
          ga('create', '{!! $settings['ga_code']  or 'UA-78414244-1' !!}', 'auto');
          ga('create', 'UA-78414244-2', 'auto', {'name': 'devTracker'});
          ga('require', 'ec');
            ga('require', 'displayfeatures');
            ga('require', 'linkid');
@yield('inline-ga-func')
@yield('inline-ga-pi')
@yield('inline-ga-atc')
@yield('inline-ga-action')
          ga('send', 'pageview');
          ga('devTracker.send', 'pageview');
    </script>

If you wish to see all files over 100M and to see where they are and what is their size try this:

find . -type f -size +100M -exec ls -lh {} \;

cat /c/Users/Phillip/.ssh/id_rsa.gracecompany.pub | ssh github "mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"

{!! $product->categories()[0] !!}

@param Request $request
@return \Illuminate\Contracts\View\Factory|\Illuminate\View\View

    <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
        ga('create', '{!! $settings['ga_code']  or 'UA-78414244-1' !!}', 'auto');
        ga('require', 'ec');
        @yield('inline-ga-func')
        @yield('inline-ga-pi')
        @yield('inline-ga-atc')
        @yield('inline-ga-action')
        ga('send', 'pageview');

    </script>

<?php $i=0 ?>
@foreach ($products as $product)
ga('ec:addImpression', {
  'id': 'product-{!! $product->id !!}',                   // Product details are provided in an impressionFieldObject.
  'name': '{!! $product->name !!}',
  'category': 'Quilting',
  'brand': 'Grace',
  'variant': 'Normal',
  'list': 'Shop Listing',
  'position': '<?php echo $i++ ?>'
});
ga('ec:setAction', 'detail');
ga('send', 'event', 'catalog', 'impression', {'nonInteraction': true});
@endforeach



@include('frontend/layout/parts/meta')

  if (!Sentinel::getUser()->inRole(['Admin', 'SuperAdmin'])){}


  if (Sentinel::check()) {
 if (!Sentinel::inRole('superadmin')) {
 if (!$request->route()->getName()) {

  if ($user = Sentinel::getUser())
    {
        if ($user->inRole('administrator'))
        {
            // Your logic
        }
    }


      $methods = ['getRoles', 'inRole', 'hasAccess', 'hasAnyAccess'];

 if (File::exists($full_path1)) {File::delete($full_path1);}


@if(!Request::url(getLang() . '/qnique'))
@endif

private function getProductVariants($variants = [])
{
    if (isset($variants)) {
        $variants = array_map(
                function ($v) {
                    return explode(':', $v);
                },
                explode(',', $variants)
        );
    }

    return $variants;
}


private function getListitem($listitems = [])
{
    if (isset($listitems)) {
        $listitems = array_map(
                function ($v) {
                    return explode(':', $v);
                },
                explode(',', $listitems)
        );
    }

    return $listitems;
}

 try
        {
            return Bakery::process_form('delete', $request, $model_slug, $identifier);
        }
        catch( Exception $e )
        {
            return redirect()->back()->withErrors(['errors' => $e->getMessage()]);
        }

    public function uploadProductImage(UploadedFile $file)
    {
       $extension = $file->getClientOriginalExtension();
       $filename = $file->getClientOriginalName();
       //$slug = str_replace('.', '', $slug);
       //$slug = str_replace(' ','_', $slug);
       //$slug = str_replace('-','_', $slug);
       $slug = pathinfo($filename, PATHINFO_FILENAME);
       $destinationPath = public_path() . '/uploads/products/'. $slug;

       if(!file_exists($destinationPath)) File::makeDirectory($destinationPath);
       //$productDestinationPath = public_path() . '/uploads/products/main/'. $slug;
       //if(!file_exists($productDestinationPath)) File::makeDirectory($productDestinationPath);
       $catDestinationPath = public_path() . '/uploads/products/catalog_size/'. $slug;
       if(!file_exists($catDestinationPath)) File::makeDirectory($catDestinationPath);
       $gridDestinationPath = public_path() . '/uploads/products/grid_size/'. $slug;
       if(!file_exists($gridDestinationPath)) File::makeDirectory($gridDestinationPath);
       $thumbDestinationPath = public_path() . '/uploads/products/thumb/'. $slug;
       if(!file_exists($thumbDestinationPath)) File::makeDirectory($thumbDestinationPath);

       //$picture = Str::slug(substr($filename, 0, strrpos($filename, "."))) . '_' . time() . '.' . $extension;
       //$picture = Str::slug(substr($filename, 0, strrpos($filename, "."))) . $extension;
       $picture = $slug . "." . $extension;
       $file->move($destinationPath, $picture);
       //$file->move($productDestinationPath, $picture);
       $file->move($thumbDestinationPath, $picture);
       $file->move($catDestinationPath, $picture);
       $file->move($gridDestinationPath, $picture);
       return $file;



 ->setUpdatedAt(\Carbon::now());

$product->published_at = \Carbon::now();;






public function postimage($photo, $filename)
    {
        $manager = new ImageManager();
        $image   = $manager->make($photo)->resize(860, 570, function ($constraint)
        {
            $constraint->aspectRatio();
        })->save(Config::get('images.post_size') . $filename);

        return $image;
    }





$('.slug').slugify('#title');


"orangehill/iseed": "dev-master",




        'Carbon' => Carbon\Carbon::class,

        'Route' => Illuminate\Support\Facades\Route::class,
        'Schema' => Illuminate\Support\Facades\Schema::class,
        'Session' => Illuminate\Support\Facades\Session::class,
        'Storage' => Illuminate\Support\Facades\Storage::class,
        'URL' => Illuminate\Support\Facades\URL::class,
        'Validator' => Illuminate\Support\Facades\Validator::class,
        'View' => Illuminate\Support\Facades\View::class,
        'Form' => Collective\Html\FormFacade::class,
        'Html' => Collective\Html\HtmlFacade::class,
        'Image' => Intervention\Image\Facades\Image::class,
        'Carbon' => Carbon\Carbon::class,

 return redirect('admin/pages')->with('success', $page->title . ' has been Updated Successfully');






$page->title = $request->input('title');
$page->content = $request->input('content');
$page->icon = $request->input('icon');
if ($page->published == 0 && $request->input('published')) {
$page->published_at = \Carbon::now();;
}
$page->published = $request->input('published');
$page->blog_post = $request->input('blog_post');
$page->slug = $request->input('slug');
$page->meta_keywords = $request->input('meta_keywords');
$page->meta_desc = $request->input('meta_desc');
$page->updated_at = \Carbon::now();
$page->save();






public function statusText()
    {
        $text = '';
        switch($this->status)
        {
            case 0:
                $text = '<p class="text-muted">Pending</p>';
                break;
            case 1:
                $text = '<p class="text-green">Active</p>';
                break;
            case 2:
                $text = '<p class="text-red">Blocked</p>';
                break;
            case 3:
                $text = '<p class="text-yellow">Suspend</p>';
                break;
        }
        return $text;
    }




 public function indexData()
    {
        $products = Product::orderBy('id', 'desc')->select('id', 'product_name', 'product_model', 'brand_id','category_id', 'unite_price', 'created_at')->with('category', 'brand');
        return Datatables::of($products)
            ->editColumn('brand_id', function($product){
                return $product->brand->brand_name;
            })
            ->editColumn('category_id', function($product){
                return $product->category->category_name;
            })
            ->editColumn('created_at', function($product){
                return '<span title="'.$product->created_at->format('F d, Y').'" data-toggle="tooltip" data-placement="top"> '.$product->created_at->diffForHumans().' </span>';
            })
            ->addColumn('stock', function($product){
                return $product->stock_available();
            })
            ->addColumn('actions', function($product){
                $button = '<a href="'.route('view_product', $product->id).'" class="btn btn-success" title="View" data-toggle="tooltip" data-placement="top"><i class="fa fa-eye"></i> </a>';
                $button .= '<a href="'.route('edit_product', $product->id).'" class="btn btn-info" title="Edit" data-toggle="tooltip" data-placement="top"><i class="fa fa-pencil"></i> </a>';
                $button .= '<a href="javascript:;" class="btn btn-danger deleteBrands" title="Delete" data-toggle="tooltip" data-placement="top" data-id="'.$product->id.'"><i class="fa fa-trash-o"></i> </a>';
                return $button;
            })
            ->removeColumn('id')
            ->removeColumn('brand')
            ->removeColumn('category')
            ->make();
    }





  //Save new attributes
if($count_attribute_names > 0){
    $product_attributes = [];
    for($i = 0; $i < $count_attribute_names; $i++)
    {
        $attribute_name = trim($attribute_names[$i]);
        if($attribute_name != '')
        {
            $attributeData = [
                'product_id'    => $id,
                'attribute_name'=> $attribute_name,
                'attribute_value'=> $attribute_values[$i]
            ];
            $createAttribute = Product_attribute::create($attributeData);
            if($createAttribute)
            {
                $createAttribute -> c_order = $createAttribute->id;
                $createAttribute->save();
            }
        }
    }
    $request->session()->forget('old_product_attribute');
}

  //Add Activity
            Activity::create(['user_id' => $user->id, 'activity' => 'You have updated '.$product_name. '  product']);

   return redirect()->back()->with('success', 'Product update success');


 //First update previous attributes belongs with this product
            if(count($attribute_name_edit) > 0)
            {
                for($i = 0; $i < count($attribute_name_edit); $i++)
                {
                    $attributeData = [
                        'attribute_name'    => $attribute_name_edit[$i],
                        'attribute_value'   => $attribute_values_edit[$i],
                        'c_order'           => $attr_ids[$i]
                    ];
                    Product_attribute::where('id', $attr_ids[$i])->update($attributeData);
                }
            }



       <td><a href="{{ route('admin.esc.images.edit', ['image_id' => $image->id ]) }}">Edit</a></td>



E:\GraceRepos\grace.reset\resources\views\frontend\layout\partials\header\



public function uploadProductImage(UploadedFile $file)
{
    $extension = $file->getClientOriginalExtension();
    $filename = $file->getClientOriginalName();
    $slug = pathinfo($filename, 0, strrpos($filename, PATHINFO_FILENAME));
    $destinationPath = public_path() . '/uploads/products/'. $slug;
    if(!file_exists($destinationPath)) File::makeDirectory($destinationPath);
    $picture = Str::slug(substr($filename, 0, strrpos($filename, "."))) . '_' . time() . '.' . $extension;
    //$picture = $slug . "." . $extension;
    return $file->move($destinationPath, $picture);
}

<td>
                {!! Form::open(['route' => ['admin.products.destroy', $product->id], 'method' => 'delete']) !!}
                <div class='btn-group'>
                    <a href="{!! route('admin.products.show', [$product->id]) !!}" class='btn btn-default btn-xs'><i class="glyphicon glyphicon-eye-open"></i></a>
                    <a href="{!! route('admin.products.edit', [$product->id]) !!}" class='btn btn-default btn-xs'><i class="glyphicon glyphicon-edit"></i></a>
                    {!! Form::button('<i class="glyphicon glyphicon-trash"></i>', ['type' => 'submit', 'class' => 'btn btn-danger btn-xs', 'onclick' => "return confirm('Are you sure?')"]) !!}
                </div>
                {!! Form::close() !!}
            </td>



Route::get('/r', function ()
{

    /**
     * undocumented function
     *
     * @return void //ouputs a list of routes and easy ways to use them.
     * @author Phillip Madsen <contact@affordableprogrammer.com>
     **/
    function philsroutes()
    {
        $i=0;
        $routeCollection = Route::getRoutes();
        echo '<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">';
        echo '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-toggle/2.2.2/css/bootstrap-toggle.css">';
        echo '<script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="   crossorigin="anonymous"></script>';
        echo "<div style='margin-top:50px'></div><div class='container'><div class='col-md-12 table-responsive'>";
        echo "<table id='table' data-toggle='table' class='table table-condensed' style='width:100%'>";
        echo '<thead>';
        echo '<tr>';
        echo "<th width='5%'> </th>";
        echo "<th width='10%'><h4>Method</h4></th>";
        echo "<th width='25%'><h4>URL</h4></th>";
        echo "<th width='25%'><h4>Route Name</h4></th>";
        echo "<th width='30%'><h4>Corresponding Action</h4></th>";
        echo '</tr>';
        echo '<thead>';

        foreach ($routeCollection as $value)
        {
            $number = $i++;
            $secretrow = "secretrow";
            echo '<tr data-toggle="collapse" data-target="#'.$secretrow.$number.'" class="accordion-toggle">';
            echo '<td><button type="button" class="btn btn-info btn-md"><i class="glyphicon glyphicon-plus"></i></button></td>';
            echo '<td>' . $value->getMethods()[0] . '</td>';
            echo "<td  style='font-family:Inconsolata;font-size: 1.25em;''><a href='" . $value->getPath() . "' target='_blank'>" . $value->getPath() . '</a> </td>';
            echo '<td>' . $value->getName() . '</td>';
            echo '<td>' . $value->getActionName() . '</td>';
            echo '</tr>';
            echo '<tr>';
            echo '<td colspan="12" class=""> <div class="accordian-body collapse table-responsive" id="'.$secretrow.$number.'"><div style="clear:both"></div>';
            echo '<table class="table table-bordered"><thead><tr><td><a href="' . $value->getPath() . '"><strong>Visit This Link</strong></a></td></tr><tr><th>Copy Url</th></tr></thead>';
            echo '<tbody>';
            echo '<tr><td align="left"><pre style="font-family: Inconsolata;font-size: 1.25em;">{!! url(\'' . $value->getPath() . '\') !!}</pre></td></tr>';
            echo '<tr><td><strong>Copy Form Url</strong></td></tr>';
            echo '<tr><td align="left"><pre style="font-family:Inconsolata;font-size: 1.25em;">{!! Form::open([\'url\' => \'' . $value->getPath() . '\', \'method\' => \'post\', \'files\' => true]) !!}</pre></td></tr>';
            echo '<tr><td align="left"><strong>Copy Url Route</strong> </td></tr>';
            echo '<tr><td align="left"><pre style="font-family: Inconsolata;font-size: 1.25em;">{!! route(\'' . $value->getName() . '\') !!}</pre></td></tr>';
            echo '<tr><td align="left"><strong>Copy Form:: Route</strong> </td></tr>';
            echo '<tr><td align="left"><pre style="font-family:Inconsolata;font-size: 1.25em;">{!! Form::open([\'route\' => \''. $value->getName() .'\', \'method\' => \'post\', \'files\' => true]) !!}</pre></td></tr>';
            echo '<tr><td align="left"><strong>Copy Url Action</strong> </td></tr>';
            echo '<tr><td align="left"><pre style="font-family:Inconsolata;font-size: 1.25em;">{!! action(\'' . $value->getActionName() . '\']) !!}</pre></td></tr></tr>';
            echo '<tr><td align="left"><strong>Copy Form:: Action</strong> </td></tr>';
            echo '<tr><td align="left"><pre style="font-family:Inconsolata;font-size: 1.25em;"> {!! Form::open([\'action\' => \'' . $value->getActionName() . '\', \'method\' => \'post\', \'files\' => true]) !!}</pre></td></tr>';
            echo '</tbody></table></div>';
            echo '</td>';
            echo '</tr>';
        }
        echo '</table></div></div>';
        echo '<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>';

    }
    return philsroutes();
});


Route::get('/rr', function ()
{
    function philsroutes()
    {
        $routeCollection = Route::getRoutes();
        echo '<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">';
        echo "<div class='container'><div class='col-md-12'><table class='table table-striped' style='width:100%'>";
        echo '<tr>';
        echo "<td width='10%'><h4>HTTP Method</h4></td>";
          echo "<th width='25%'><h4>URL</h4></th>";
        echo "<td width='45%'><h4>Route</h4></td>";
        echo "<td width='45%'><h4>Corresponding Action</h4></td>";
        echo '</tr>';
        foreach ($routeCollection as $value)
        {
            echo '<tr>';
            echo '<td>' . $value->getMethods()[0] . '</td>';
                        echo "<td><a href='" . $value->getPath() . "' target='_blank'>" . $value->getPath() . '</a> </td>';
            echo "<td><a href='" . $value->getPath() . "' target='_blank'>" . $value->getPath() . '</a> </td>';
            echo '<td>' . $value->getActionName() . '</td>';
            echo '</tr>';
        }
        echo '</table></div></div>';
        echo '<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>';
    }
    return philsroutes();
});